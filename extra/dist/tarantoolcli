#!/usr/bin/env tarantool

local function getparam (t_in, options, params)
    local t_out = {}
    for i, v in ipairs(t_in) do
        local prefix, command = v:sub(1,1), v:sub(2)
        if prefix == "$" then
            table.insert(t_out, command)
        elseif prefix == "-" then
            for id in command:gmatch("[^,;]+") do
                if not (id:match("^[%a_][%w_]*$") and true) then
                    error(("bad argument #%d: ID not valid"):format(i))
                end
                t_out[id] = true
            end
        elseif prefix == "!" then
            local f, err = loadstring(command)
            if not f then
                error(("bad argument #%d: %s"):format(i, err))
            end
            setfenv(f, t_out)()
        elseif v:find("=") then
            local ids, val = v:match("^([^=]+)%=(.*)") -- no space around =
            if not ids then
                error(("bad argument #%d: invalid assignment syntax"):format(i))
            end
            val = val:sub(1, 1) == "$" and val:sub(2) or tonumber(val) or val
            for id in ids:gmatch("[^,;]+") do
                if not (id:match("^[%a_][%w_]*$") and true) then
                    error(("bad argument #%d: ID not valid"):format(i))
                end
                t_out[id] = val
            end
        else
            table.insert(t_out, v)
        end
    end
    if options then
        local lookup, unknown = {}, {}
        for _, v in ipairs(options) do
            lookup[v] = true
        end
        for k, _ in pairs(t_out) do
            if lookup[k] == nil and type(k) == "string" then
                table.insert(unknown, k)
            end
        end
        if #unknown > 0 then
            error(("unknown options: %s"):format(table.concat(unknown, ", ")))
        end
    end
    if params then
        local missing = {}
        for _, v in ipairs(params) do
            if t_out[v] == nil then table.insert(missing, v) end
        end
        if #missing > 0 then
            error(("missing parameters: %s"):format(table.concat(missing, ", ")))
        end
    end
    return t_out
end

-- vim: syntax=lua
